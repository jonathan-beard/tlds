var annotated =
[
    [ "anonymous_namespace{biteager.cpp}", "namespaceanonymous__namespace_02biteager_8cpp_03.html", "namespaceanonymous__namespace_02biteager_8cpp_03" ],
    [ "anonymous_namespace{biteagerredo.cpp}", "namespaceanonymous__namespace_02biteagerredo_8cpp_03.html", "namespaceanonymous__namespace_02biteagerredo_8cpp_03" ],
    [ "anonymous_namespace{bitlazy.cpp}", "namespaceanonymous__namespace_02bitlazy_8cpp_03.html", "namespaceanonymous__namespace_02bitlazy_8cpp_03" ],
    [ "anonymous_namespace{BlockOperations.cpp}", "namespaceanonymous__namespace_02BlockOperations_8cpp_03.html", null ],
    [ "anonymous_namespace{bmharness.cpp}", "namespaceanonymous__namespace_02bmharness_8cpp_03.html", null ],
    [ "anonymous_namespace{byear.cpp}", "namespaceanonymous__namespace_02byear_8cpp_03.html", "namespaceanonymous__namespace_02byear_8cpp_03" ],
    [ "anonymous_namespace{byeau.cpp}", "namespaceanonymous__namespace_02byeau_8cpp_03.html", "namespaceanonymous__namespace_02byeau_8cpp_03" ],
    [ "anonymous_namespace{byteeager.cpp}", "namespaceanonymous__namespace_02byteeager_8cpp_03.html", "namespaceanonymous__namespace_02byteeager_8cpp_03" ],
    [ "anonymous_namespace{byteeagerredo.cpp}", "namespaceanonymous__namespace_02byteeagerredo_8cpp_03.html", "namespaceanonymous__namespace_02byteeagerredo_8cpp_03" ],
    [ "anonymous_namespace{bytelazy.cpp}", "namespaceanonymous__namespace_02bytelazy_8cpp_03.html", "namespaceanonymous__namespace_02bytelazy_8cpp_03" ],
    [ "anonymous_namespace{cbr.cpp}", "namespaceanonymous__namespace_02cbr_8cpp_03.html", "namespaceanonymous__namespace_02cbr_8cpp_03" ],
    [ "anonymous_namespace{cgl.cpp}", "namespaceanonymous__namespace_02cgl_8cpp_03.html", "namespaceanonymous__namespace_02cgl_8cpp_03" ],
    [ "anonymous_namespace{ctoken.cpp}", "namespaceanonymous__namespace_02ctoken_8cpp_03.html", "namespaceanonymous__namespace_02ctoken_8cpp_03" ],
    [ "anonymous_namespace{ctokenturbo.cpp}", "namespaceanonymous__namespace_02ctokenturbo_8cpp_03.html", "namespaceanonymous__namespace_02ctokenturbo_8cpp_03" ],
    [ "anonymous_namespace{irrevocability.cpp}", "namespaceanonymous__namespace_02irrevocability_8cpp_03.html", null ],
    [ "anonymous_namespace{libitm-5.1,5.cpp}", "namespaceanonymous__namespace_02libitm-5_81_005_8cpp_03.html", null ],
    [ "anonymous_namespace{libitm-5.12.cpp}", "namespaceanonymous__namespace_02libitm-5_812_8cpp_03.html", "namespaceanonymous__namespace_02libitm-5_812_8cpp_03" ],
    [ "anonymous_namespace{libitm-5.13,14.cpp}", "namespaceanonymous__namespace_02libitm-5_813_0014_8cpp_03.html", null ],
    [ "anonymous_namespace{libitm-5.16.cpp}", "namespaceanonymous__namespace_02libitm-5_816_8cpp_03.html", "namespaceanonymous__namespace_02libitm-5_816_8cpp_03" ],
    [ "anonymous_namespace{llt.cpp}", "namespaceanonymous__namespace_02llt_8cpp_03.html", "namespaceanonymous__namespace_02llt_8cpp_03" ],
    [ "anonymous_namespace{mcs.cpp}", "namespaceanonymous__namespace_02mcs_8cpp_03.html", "namespaceanonymous__namespace_02mcs_8cpp_03" ],
    [ "anonymous_namespace{nano.cpp}", "namespaceanonymous__namespace_02nano_8cpp_03.html", "namespaceanonymous__namespace_02nano_8cpp_03" ],
    [ "anonymous_namespace{norec.cpp}", "namespaceanonymous__namespace_02norec_8cpp_03.html", "namespaceanonymous__namespace_02norec_8cpp_03" ],
    [ "anonymous_namespace{norecprio.cpp}", "namespaceanonymous__namespace_02norecprio_8cpp_03.html", "namespaceanonymous__namespace_02norecprio_8cpp_03" ],
    [ "anonymous_namespace{oreau.cpp}", "namespaceanonymous__namespace_02oreau_8cpp_03.html", "namespaceanonymous__namespace_02oreau_8cpp_03" ],
    [ "anonymous_namespace{orecala.cpp}", "namespaceanonymous__namespace_02orecala_8cpp_03.html", "namespaceanonymous__namespace_02orecala_8cpp_03" ],
    [ "anonymous_namespace{oreceager.cpp}", "namespaceanonymous__namespace_02oreceager_8cpp_03.html", "namespaceanonymous__namespace_02oreceager_8cpp_03" ],
    [ "anonymous_namespace{oreceagerredo.cpp}", "namespaceanonymous__namespace_02oreceagerredo_8cpp_03.html", "namespaceanonymous__namespace_02oreceagerredo_8cpp_03" ],
    [ "anonymous_namespace{orecela.cpp}", "namespaceanonymous__namespace_02orecela_8cpp_03.html", "namespaceanonymous__namespace_02orecela_8cpp_03" ],
    [ "anonymous_namespace{orecfair.cpp}", "namespaceanonymous__namespace_02orecfair_8cpp_03.html", "namespaceanonymous__namespace_02orecfair_8cpp_03" ],
    [ "anonymous_namespace{oreclazy.cpp}", "namespaceanonymous__namespace_02oreclazy_8cpp_03.html", "namespaceanonymous__namespace_02oreclazy_8cpp_03" ],
    [ "anonymous_namespace{pipeline.cpp}", "namespaceanonymous__namespace_02pipeline_8cpp_03.html", "namespaceanonymous__namespace_02pipeline_8cpp_03" ],
    [ "anonymous_namespace{policies.cpp}", "namespaceanonymous__namespace_02policies_8cpp_03.html", null ],
    [ "anonymous_namespace{profileapp.cpp}", "namespaceanonymous__namespace_02profileapp_8cpp_03.html", "namespaceanonymous__namespace_02profileapp_8cpp_03" ],
    [ "anonymous_namespace{profiletm.cpp}", "namespaceanonymous__namespace_02profiletm_8cpp_03.html", "namespaceanonymous__namespace_02profiletm_8cpp_03" ],
    [ "anonymous_namespace{profiling.cpp}", "namespaceanonymous__namespace_02profiling_8cpp_03.html", null ],
    [ "anonymous_namespace{ringala.cpp}", "namespaceanonymous__namespace_02ringala_8cpp_03.html", "namespaceanonymous__namespace_02ringala_8cpp_03" ],
    [ "anonymous_namespace{ringsw.cpp}", "namespaceanonymous__namespace_02ringsw_8cpp_03.html", "namespaceanonymous__namespace_02ringsw_8cpp_03" ],
    [ "anonymous_namespace{serial.cpp}", "namespaceanonymous__namespace_02serial_8cpp_03.html", "namespaceanonymous__namespace_02serial_8cpp_03" ],
    [ "anonymous_namespace{static.cpp}", "namespaceanonymous__namespace_02static_8cpp_03.html", null ],
    [ "anonymous_namespace{swiss.cpp}", "namespaceanonymous__namespace_02swiss_8cpp_03.html", "namespaceanonymous__namespace_02swiss_8cpp_03" ],
    [ "anonymous_namespace{ticket.cpp}", "namespaceanonymous__namespace_02ticket_8cpp_03.html", "namespaceanonymous__namespace_02ticket_8cpp_03" ],
    [ "anonymous_namespace{tli.cpp}", "namespaceanonymous__namespace_02tli_8cpp_03.html", "namespaceanonymous__namespace_02tli_8cpp_03" ],
    [ "anonymous_namespace{tml.cpp}", "namespaceanonymous__namespace_02tml_8cpp_03.html", "namespaceanonymous__namespace_02tml_8cpp_03" ],
    [ "anonymous_namespace{tmllazy.cpp}", "namespaceanonymous__namespace_02tmllazy_8cpp_03.html", "namespaceanonymous__namespace_02tmllazy_8cpp_03" ],
    [ "anonymous_namespace{txthread.cpp}", "namespaceanonymous__namespace_02txthread_8cpp_03.html", null ],
    [ "anonymous_namespace{types.cpp}", "namespaceanonymous__namespace_02types_8cpp_03.html", null ],
    [ "anonymous_namespace{WBMMPolicy.cpp}", "namespaceanonymous__namespace_02WBMMPolicy_8cpp_03.html", null ],
    [ "itm2stm", "namespaceitm2stm.html", "namespaceitm2stm" ],
    [ "stm", "namespacestm.html", "namespacestm" ],
    [ "_ITM_srcLocation", "struct__ITM__srcLocation.html", "struct__ITM__srcLocation" ],
    [ "adtree", "structadtree.html", "structadtree" ],
    [ "adtree_node", "structadtree__node.html", "structadtree__node" ],
    [ "adtree_vary", "structadtree__vary.html", "structadtree__vary" ],
    [ "Allocator", "classAllocator.html", "classAllocator" ],
    [ "arg", "structarg.html", "structarg" ],
    [ "args", "structargs.html", "structargs" ],
    [ "barrier", "classbarrier.html", "classbarrier" ],
    [ "bitmap", "structbitmap.html", "structbitmap" ],
    [ "block", "structblock.html", "structblock" ],
    [ "block_pool", "classblock__pool.html", "classblock__pool" ],
    [ "BoostingList", "classBoostingList.html", "classBoostingList" ],
    [ "BoostingSkip", "classBoostingSkip.html", "classBoostingSkip" ],
    [ "chunk_st", "structchunk__st.html", "structchunk__st" ],
    [ "client", "structclient.html", "structclient" ],
    [ "comparator", "structcomparator.html", "structcomparator" ],
    [ "computeGragh_arg", "structcomputeGragh__arg.html", "structcomputeGragh__arg" ],
    [ "concurrent_queue", "classconcurrent__queue.html", "classconcurrent__queue" ],
    [ "Config", "structConfig.html", "structConfig" ],
    [ "constructEntry", "structconstructEntry.html", "structconstructEntry" ],
    [ "coordinate", "structcoordinate.html", "structcoordinate" ],
    [ "Coordinator", "classCoordinator.html", "classCoordinator" ],
    [ "counted_ptr", "unioncounted__ptr.html", "unioncounted__ptr" ],
    [ "customer", "structcustomer.html", "structcustomer" ],
    [ "CustomForest", "structCustomForest.html", "structCustomForest" ],
    [ "d_lock", "classd__lock.html", "classd__lock" ],
    [ "data", "structdata.html", "structdata" ],
    [ "decoded", "structdecoded.html", "structdecoded" ],
    [ "decoder", "structdecoder.html", "structdecoder" ],
    [ "Desc", "structDesc.html", "structDesc" ],
    [ "detector", "structdetector.html", "structdetector" ],
    [ "Disjoint", "structDisjoint.html", "structDisjoint" ],
    [ "Display", "classDisplay.html", "classDisplay" ],
    [ "DList", "classDList.html", "classDList" ],
    [ "edge", "classedge.html", "classedge" ],
    [ "edge_set", "classedge__set.html", "classedge__set" ],
    [ "element", "structelement.html", "structelement" ],
    [ "endInfoEntry", "structendInfoEntry.html", "structendInfoEntry" ],
    [ "eq_point", "structeq__point.html", "structeq__point" ],
    [ "findBestTaskArg", "structfindBestTaskArg.html", "structfindBestTaskArg" ],
    [ "findSubGraphs0_arg", "structfindSubGraphs0__arg.html", "structfindSubGraphs0__arg" ],
    [ "findSubGraphs1_arg", "structfindSubGraphs1__arg.html", "structfindSubGraphs1__arg" ],
    [ "findSubGraphs2_arg", "structfindSubGraphs2__arg.html", "structfindSubGraphs2__arg" ],
    [ "fr_set_st", "structfr__set__st.html", "structfr__set__st" ],
    [ "gc_global_st", "structgc__global__st.html", "structgc__global__st" ],
    [ "gc_st", "structgc__st.html", "structgc__st" ],
    [ "gene", "structgene.html", "structgene" ],
    [ "getStartLists_arg", "structgetStartLists__arg.html", "structgetStartLists__arg" ],
    [ "graph", "structgraph.html", "structgraph" ],
    [ "graphSDG", "structgraphSDG.html", "structgraphSDG" ],
    [ "grid", "structgrid.html", "structgrid" ],
    [ "hash_point", "structhash__point.html", "structhash__point" ],
    [ "hashtable", "structhashtable.html", "structhashtable" ],
    [ "HashTable", "classHashTable.html", "classHashTable" ],
    [ "hashtable_iter", "structhashtable__iter.html", "structhashtable__iter" ],
    [ "heap", "structheap.html", "structheap" ],
    [ "HelpStack", "structHelpStack.html", "structHelpStack" ],
    [ "JApplet", "classJApplet.html", null ],
    [ "JPanel", "classJPanel.html", null ],
    [ "jsw_avlnode", "structjsw__avlnode.html", "structjsw__avlnode" ],
    [ "jsw_avltrav", "structjsw__avltrav.html", "structjsw__avltrav" ],
    [ "jsw_avltree", "structjsw__avltree.html", "structjsw__avltree" ],
    [ "l", "structl.html", "structl" ],
    [ "learner", "structlearner.html", "structlearner" ],
    [ "learner_task", "structlearner__task.html", "structlearner__task" ],
    [ "list", "structlist.html", "structlist" ],
    [ "List", "classList.html", "classList" ],
    [ "list_node", "structlist__node.html", "structlist__node" ],
    [ "LLNode", "classLLNode.html", "classLLNode" ],
    [ "LockfreeList", "classLockfreeList.html", "classLockfreeList" ],
    [ "LockKey", "classLockKey.html", "classLockKey" ],
    [ "lt_point", "structlt__point.html", "structlt__point" ],
    [ "manager", "structmanager.html", "structmanager" ],
    [ "maze", "structmaze.html", "structmaze" ],
    [ "mcs_qnode_t", "structmcs__qnode__t.html", "structmcs__qnode__t" ],
    [ "memory", "structmemory.html", "structmemory" ],
    [ "mesh", "structmesh.html", "structmesh" ],
    [ "MS_queue", "classMS__queue.html", "classMS__queue" ],
    [ "net", "structnet.html", "structnet" ],
    [ "net_node", "structnet__node.html", "structnet__node" ],
    [ "node", "structnode.html", "structnode" ],
    [ "node_st", "structnode__st.html", "structnode__st" ],
    [ "node_t", "structnode__t.html", "structnode__t" ],
    [ "NodeDesc", "structNodeDesc.html", "structNodeDesc" ],
    [ "Operator", "structOperator.html", "structOperator" ],
    [ "packet", "structpacket.html", "structpacket" ],
    [ "pair", "structpair.html", "structpair" ],
    [ "point", "classpoint.html", "classpoint" ],
    [ "pool", "structpool.html", "structpool" ],
    [ "priv_t", "structpriv__t.html", "structpriv__t" ],
    [ "ptst_st", "structptst__st.html", "structptst__st" ],
    [ "pv_side", "structpv__side.html", "structpv__side" ],
    [ "qnode_t", "structqnode__t.html", "structqnode__t" ],
    [ "query", "structquery.html", "structquery" ],
    [ "queue", "structqueue.html", "structqueue" ],
    [ "random", "structrandom.html", "structrandom" ],
    [ "rbtree", "structrbtree.html", "structrbtree" ],
    [ "RBTree", "classRBTree.html", "classRBTree" ],
    [ "region", "structregion.html", "structregion" ],
    [ "region_info", "structregion__info.html", "structregion__info" ],
    [ "reservation", "structreservation.html", "structreservation" ],
    [ "reservation_info", "structreservation__info.html", "structreservation__info" ],
    [ "router", "structrouter.html", "structrouter" ],
    [ "router_solve_arg", "structrouter__solve__arg.html", "structrouter__solve__arg" ],
    [ "RSTMList", "classRSTMList.html", "classRSTMList" ],
    [ "runnable", "classrunnable.html", "classrunnable" ],
    [ "ScopedTimer", "classScopedTimer.html", "classScopedTimer" ],
    [ "segments", "structsegments.html", "structsegments" ],
    [ "sequencer", "structsequencer.html", "structsequencer" ],
    [ "sequencer_run_arg", "structsequencer__run__arg.html", "structsequencer__run__arg" ],
    [ "sequential_queue", "classsequential__queue.html", "classsequential__queue" ],
    [ "set_op_st", "structset__op__st.html", "structset__op__st" ],
    [ "SetAdaptor", "classSetAdaptor.html", null ],
    [ "SetAdaptor< BoostingList >", "classSetAdaptor_3_01BoostingList_01_4.html", "classSetAdaptor_3_01BoostingList_01_4" ],
    [ "SetAdaptor< BoostingSkip >", "classSetAdaptor_3_01BoostingSkip_01_4.html", "classSetAdaptor_3_01BoostingSkip_01_4" ],
    [ "SetAdaptor< RSTMList >", "classSetAdaptor_3_01RSTMList_01_4.html", "classSetAdaptor_3_01RSTMList_01_4" ],
    [ "SetAdaptor< stm_skip >", "classSetAdaptor_3_01stm__skip_01_4.html", "classSetAdaptor_3_01stm__skip_01_4" ],
    [ "SetAdaptor< trans_skip >", "classSetAdaptor_3_01trans__skip_01_4.html", "classSetAdaptor_3_01trans__skip_01_4" ],
    [ "SetAdaptor< TransList >", "classSetAdaptor_3_01TransList_01_4.html", "classSetAdaptor_3_01TransList_01_4" ],
    [ "SetOperator", "structSetOperator.html", "structSetOperator" ],
    [ "simple_queue", "classsimple__queue.html", "classsimple__queue" ],
    [ "stm_blk_st", "structstm__blk__st.html", "structstm__blk__st" ],
    [ "stm_st", "structstm__st.html", "structstm__st" ],
    [ "stm_tx_entry_st", "structstm__tx__entry__st.html", "structstm__tx__entry__st" ],
    [ "stm_tx_st", "structstm__tx__st.html", "structstm__tx__st" ],
    [ "stream", "structstream.html", "structstream" ],
    [ "Surface", "classSurface.html", "classSurface" ],
    [ "table", "structtable.html", "structtable" ],
    [ "thread", "classthread.html", "classthread" ],
    [ "Thread", "classThread.html", null ],
    [ "ThreadBarrier", "classThreadBarrier.html", "classThreadBarrier" ],
    [ "ThreadLocalPointer", "classThreadLocalPointer.html", "classThreadLocalPointer" ],
    [ "ticket_lock_t", "structticket__lock__t.html", "structticket__lock__t" ],
    [ "Time", "classTime.html", "classTime" ],
    [ "Timer", "classTimer.html", "classTimer" ],
    [ "tm_hash_set", "classtm__hash__set.html", "classtm__hash__set" ],
    [ "tm_list_set", "classtm__list__set.html", "classtm__list__set" ],
    [ "tm_set", "classtm__set.html", "classtm__set" ],
    [ "trans_skip", "structtrans__skip.html", "structtrans__skip" ],
    [ "TransList", "classTransList.html", "classTransList" ],
    [ "tx_side", "structtx__side.html", "structtx__side" ],
    [ "TypeTestObject", "structTypeTestObject.html", "structTypeTestObject" ],
    [ "UI", "classUI.html", "classUI" ],
    [ "V", "structV.html", "structV" ],
    [ "Vd", "structVd.html", "structVd" ],
    [ "vector", "structvector.html", "structvector" ],
    [ "with_lock", "classwith__lock.html", "classwith__lock" ],
    [ "worker", "classworker.html", "classworker" ]
];